/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define LOWER  1
#define RAISE  2
#define ADJUST 3

/* NOTE: At the time of the creation of this keymap, there are no specified codes for 'eisuu' and 'kana' input in ZMK.
However, 'LANG1' and 'LANG2' are fully-functioning candidates for 'kana' and 'eisuu' input respectively.
As such, those are in use within the default layer at this time.*/

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // | GRAVE  |   1    |   2    |   3    |   4    |   5    |                                      |   6    |   7    |   8    |   9    |   0    |  DEL   |
            // |  TAB   |   Q    |   W    |   E    |   R    |   T    |                                      |   Y    |   U    |   I    |   O    |   P    |  BSPC  |
            // |  CTRL  |   A    |   S    |   D    |   F    |   G    |                                      |   H    |   J    |   K    |   L    |   ;    |   '    |
            // |  SHIFT |   Z    |   X    |   C    |   V    |   B    |  LBKT  |                    |  RBKT  |   N    |   M    |   ,    |   .    |   /    |  RET   |
            // | ADJUST |  ESC   |  ALT   |  LGUI  | EISUU  | LOWER  | SPACE  |                    |  SPACE | RAISE  |  KANA  |  LEFT  |  DOWN  |  UP    |  RIGHT |

            bindings = <
&kp GRAVE   &kp N1     &kp N2         &kp N3  &kp N4        &kp N5                                    &kp N6             &kp N7         &kp N8     &kp N9      &kp N0     &kp DEL
&kp TAB     &kp Q      &kp W          &kp E   &kp R         &kp T                                     &kp Y              &kp U          &kp I      &kp O       &kp P      &kp BACKSLASH
&kp ESCAPE  &kp A      &kp S          &kp D   &kp F         &kp G                                     &kp H              &kp J          &kp K      &kp L       &kp SEMI   &kp ENTER
&kp LSHFT   &kp Z      &kp X          &kp C   &kp V         &kp B             &kp LBKT     &kp RBKT   &kp N              &kp M          &kp COMMA  &kp PERIOD  &kp SLASH  &kp SQT
&mo 1       &kp LCTRL  &kp LG(SPACE)  &none   &kp LEFT_ALT  &kp LEFT_COMMAND  &kp SPACE    &kp SPACE  &kp RIGHT_COMMAND  &kp RIGHT_ALT  &none      &none       &none      &kp EQUAL
            >;
        };

        lower_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |      |      |      |      |      |      |                                  |      |      |      |      |      |      |
            // |  ~   |  !   |  @   |  #   |  $   |  %   |                                  |  ^   |  &   |  *   |  (   |  )   |      |
            // |      |      |      |      |      |      |                                  |      |  _   |  +   |  {   |  }   | PIPE |
            // |      |      |      |      |      |      |  (   |                    |  )   |      |      |      | HOME | END  |      |
            // |      |      |      |      |      |      |      |                    |      |      |      |      |      |      |      |

            bindings = <
&trans  &kp F1  &kp F2             &kp F3  &kp F4  &kp F5                                               &kp F6          &kp F7    &kp F8        &kp F9     &kp F10  &trans
&trans  &trans  &trans             &trans  &trans  &trans                                               &trans          &trans    &trans        &trans     &trans   &trans
&trans  &trans  &trans             &trans  &trans  &trans                                               &kp LEFT_ARROW  &kp DOWN  &kp UP_ARROW  &kp RIGHT  &trans   &trans
&trans  &trans  &trans             &trans  &trans  &trans  &kp LA(LC(LS(LG(F6))))    &trans             &trans          &trans    &trans        &trans     &trans   &trans
&trans  &trans  &kp LC(LG(SPACE))  &trans  &trans  &trans  &trans                    &kp LC(LA(LG(C)))  &trans          &trans    &trans        &trans     &trans   &trans
            >;
        };
    };
};
